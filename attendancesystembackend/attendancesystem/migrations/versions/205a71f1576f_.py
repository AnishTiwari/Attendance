"""empty message

Revision ID: 205a71f1576f
Revises: 
Create Date: 2020-06-06 11:43:38.635046

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '205a71f1576f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('course_name', sa.Text(), nullable=False),
    sa.Column('course_code', sa.String(length=200), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.String(length=25), nullable=True),
    sa.Column('longitude', sa.String(length=25), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staffs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_name', sa.String(length=200), nullable=True),
    sa.Column('staff_id_no', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('StaffAssigned',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('attendances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('rollno', sa.Integer(), nullable=True),
    sa.Column('is_present', sa.Boolean(), nullable=False),
    sa.Column('logged_time', sa.DateTime(), nullable=False),
    sa.Column('period', sa.Integer(), nullable=False),
    sa.Column('IsFingerprint', sa.Boolean(), nullable=True),
    sa.Column('logged_date', sa.Date(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ukey', sa.String(length=500), nullable=False),
    sa.Column('credential_id', sa.String(length=250), nullable=False),
    sa.Column('display_name', sa.String(length=160), nullable=False),
    sa.Column('pub_key', sa.String(length=500), nullable=True),
    sa.Column('sign_count', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('emailid', sa.String(length=50), nullable=False),
    sa.Column('rollno', sa.Integer(), nullable=False),
    sa.Column('rp_id', sa.String(length=253), nullable=False),
    sa.Column('icon_url', sa.String(length=2083), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('credential_id'),
    sa.UniqueConstraint('emailid'),
    sa.UniqueConstraint('pub_key'),
    sa.UniqueConstraint('rollno'),
    sa.UniqueConstraint('ukey'),
    sa.UniqueConstraint('username')
    )
    op.create_table('enrolled_courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='cascade'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_students',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('student_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['staff_id'], ['staffs.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('courseschedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('day', sa.Integer(), nullable=False),
    sa.Column('enrolled_course_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['enrolled_course_id'], ['enrolled_courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('periods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('courseschedule_id', sa.Integer(), nullable=True),
    sa.Column('period_no', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('IsFingerprint', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['courseschedule_id'], ['courseschedules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('periods')
    op.drop_table('courseschedules')
    op.drop_table('staff_students')
    op.drop_table('enrolled_courses')
    op.drop_table('users')
    op.drop_table('attendances')
    op.drop_table('StaffAssigned')
    op.drop_table('staffs')
    op.drop_table('locations')
    op.drop_table('courses')
    # ### end Alembic commands ###
